///Здесь будут мои подсказки и записи на время разработки приложения

///Обзор папок и файлов во Flutter приложении
///.dart_tool - появилась с Dart версии 2. Используется pub и другими дарт инструментами
///заменяет бывшую папку pub
///.idea - содержит конфигурацию и настройки для idea от Jetbrains. Если использую
///только VSC, то не нужна
///папки android и ios-содержит код и доп файлы, которые позволяет связать флаттер
///приложение и эти платформы
///build - содержит файлы, создаваемые в процессе создания флаттер приложения
///lib - содержит сам код приложения на языке Dart. Здесь и будет основная работа
///при создании приложения на флаттер. В эту же папку будем добавлять все наши 
///файлы Dart
///test - нужна для хранения файлов с тестами
///
///.gitignore - файл нужен для работы с git. Сообщает git какие файлы он должен игнорировать
///Обычно сюда добавляются временные файлы которые не являются полезными для других
///соавторов, таких как продукты компиляции, временные файлы idea
///.metadata - сохраняет некоторую инфо для правильного построения нашего приложения
///Управляется автоматически флаттером
///.packages - содержит список зависимостей, используемых флаттер приложением, он
///генерируется автоматически флаттер сдк и автоматически прописывает некоторые
///зависимости, когда мы выполняем команду packages get. Не должны удалять этот файл
///но и не надо в нем работать
///pubspec.lock - также известный как package lock файл. Цель файла в отслеживании
///точных версий установленных пакетов, что позволяет сделать разрабат продукт
///100% воспроизводимым в его исходном виде, даже в случае эти пакеты обновили
///pubspec.yaml - этот файл позволяет управлять зависимости нашего проекта. Здесь
///мы можем настроить, какие сторонние пакеты мы будем использовать в нашем проекте.
///Какие изображения, шрифты и тд. Можно сказать что это файл конфигурации, который
///позволяет нам настроить работу нашего приложения и добавить сторонние пакеты 
///для упрощения разработки приложения

///Hot reload
///!Горячая перезагрузка обновляет наше приложение только в соответствии с текущим
///состоянием. Для иного нужен hot restart

///Дерево виджетов
///Набор узлов, где каждый узел является виджетом. Все узлы связаны родительски -
///дочерними отношениями
///Главный в иерархии - Material App Widget
///Scaffold - слой представления. Это виджет, который визуально представляет собой
///пользовательский интерфейс, а уже на нем располагаются виджеты элементов и
///оформления:формы, поля, изображения, текст и тд
///
///shift+alt+f - автоматическое форматирование документа
